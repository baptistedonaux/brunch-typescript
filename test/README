This is a test application used to manually verify the typescript-brunch
plugin using a real brunch build environment.  It builds some sample
TypeScript files found in the app/ directory using whatever version of
typescript has been installed.

The package.json in this directory specifies the version of typescript-brunch
found in the parent directory via the file-based dependency mechanism.  If you
make changes to the local typescript-brunch, you will have to tell npm to
update it before using this test app to verify.

Helpful commands:

npm install

  Fetch all of this app's dependent modules and put them into
  node_modules/.

npm install typescript@x.y.z

  Install whatever version of typescript you want to test with.

npm update typescript-brunch

  Copy the local typescript-brunch files from the parent directory into this
  app's node_modules.

./tsc -v

  Confirm that you're using the version of TypeScript that you think you are
  :)

export NODE_PATH=node_modules/

  Adds this test app's node_modules/ to node's resolver.  This is necessary
  because our package.json uses file syntax for the typescript-brunch
  dependency, which makes it a symlink in node_modules/, which node then
  resolves to the absolute path to typescript-brunch (our parent directory),
  and from there node can't find typescript, since it only installed in this
  test app's node_modules/.  Sigh!
  
./brunch build d -p

  Build the test app.  This tests typesript-brunch.  The build result goes
  into the public/app.js.

./tsc -p app/app-tsconfig.json

  Compile the app's TypeScript files directly with the tsc compiler to see if
  tsc finds any errors that typescript-brunch doesn't.
  
  Note that the tsc config is called app-tsconfig.json instead of
  tsconfig.json to avoid it being picked up by typescript-brunch.  It also
  tells tsc to only compile; no JavaScript files are emitted.

The typescript-brunch package.json specifies typescript as a peer dependency,
so you should never see a typescript directory inside typescript-brunch's
node_modules.  If you do, you've done something wrong and should nuke this
app's entire node_modules/ and npm install again.

The test app has been tested with the following typescript versions:

  2.0.10
  2.1.6
  2.2.2
  2.3.4
  2.4.2
  2.5.3
  2.6.2
  2.7.2
  2.8.4
  2.9.2
  3.0.3
  3.1.6

It has also been tested with these node versions:

  11.0.0
  10.13.0
  8.12.0
